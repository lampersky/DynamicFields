window.ImageUploadComponent||(window.ImageUploadComponent=class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=`
              <div style="display: flex; margin-bottom: 1rem;">
                <input type="file" accept="image/*">
                <button>crop</button>
              </div>
              <slot></slot>
            `}connectedCallback(){let{addEventListener:e,setValue:t,getPathBase:n,getElement:a}=window.dynamicFields?.[this.getAttribute("dynamic-field-parent-id")],o=(this.setValue=t,this.pathBase=n(),this.fileInput=this.shadowRoot.querySelector('input[type="file"]'),this.shadowRoot.querySelector("button").addEventListener("click",async()=>{let{blob:e,dataURL:t}=await this.getCroppedBlob();this.fileInput.value=null;var n=this.uuidv4()+".png",n=(await this.upload(e,n).then(e=>{this.cropElement.src=t,this.setValue(e.result)}).catch(e=>{console.error("Can't upload:",e)}),window.self!==window.top);n||window.addEventListener("beforeunload",this.beforeUnloadHandler)}),this.shadowRoot.querySelector("slot"));this.fileInput.addEventListener("change",e=>{this.handleFile(e)}),o.addEventListener("slotchange",()=>{this.cropElement=o.assignedElements().find(e=>"image-crop"===e.tagName.toLowerCase()),this.cropElement&&customElements.whenDefined("image-crop").then(()=>{this.cropElement.addEventListener("image-crop-change",e=>{var{x:e,y:t,width:n,height:a}=e.detail;this.lastCrop={x:e,y:t,width:n,height:a}}),e("value",e=>{this.cropElement&&e?.mediaPath&&(this.cropElement.src="/media/"+e.mediaPath)},{init:!0})})});var i=a().closest("form");i&&i.querySelectorAll('button[type="submit"]').forEach(e=>{e.addEventListener("click",()=>{window.removeEventListener("beforeunload",this.beforeUnloadHandler)})})}uuidv4(){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16))}beforeUnloadHandler(e){e.preventDefault(),e.returnValue=""}handleFile(e){var t,e=e.target.files[0];e&&this.cropElement&&((t=new FileReader).onload=e=>{this.cropElement.src=e.target.result},t.readAsDataURL(e))}emitCropData(e){var{x:e,y:t,width:n,height:a}=e;this.lastCrop={x:e,y:t,width:n,height:a}}async getCroppedBlob(e="image/png",t=.92){if(!this.cropElement||!this.cropElement.src)return null;let n=new Image;n.src=this.cropElement.src,await new Promise(e=>{n.onload=e});var{x:a=0,y:o=0,width:i=n.width,height:r=n.height}=this.lastCrop||{};let s=document.createElement("canvas");return s.width=i,s.height=r,s.getContext("2d").drawImage(n,a,o,i,r,0,0,i,r),new Promise(n=>{s.toBlob(e=>{var t=s.toDataURL();n({blob:e,dataURL:t})},e,t)})}async upload(e,t){var n=document.querySelector("input[name=__RequestVerificationToken]").value,a=new FormData,o=new DataTransfer,e=new File([e],t);return o.items.add(e),a.append("path","dynamicFields"),a.append("contentType","image/png"),a.append("__RequestVerificationToken",n),a.append("files",o.files[0]),fetch(this.pathBase+"/Admin/Media/Upload",{method:"POST",body:a}).then(e=>{if(e.ok)return e.json();throw`Server responded with code: ${e.status}.`}).then(e=>{if(e&&e.files&&e.files[0])return{success:!(e=e.files[0]).error,result:e,error:e.error}}).catch(e=>({success:!1,error:e}))}}),window.customElements.get("image-upload-component")||window.customElements.define("image-upload-component",window.ImageUploadComponent);