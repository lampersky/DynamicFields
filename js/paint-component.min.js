window.PaintComponent||(window.PaintComponent=class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).innerHTML=`
          <style>
            canvas {
              border: 1px solid #ccc;
              display: block;
              margin-bottom: 10px;
            }
            .controls {
              display: flex;
              flex-wrap: wrap;
              gap: 10px;
              align-items: center;
            }
            button, input, select {
              padding: 5px 10px;
              font-size: 14px;
              cursor: pointer;
            }
          </style>
          <div>
            <canvas id="canvas" width="800" height="400"></canvas>
            <div class="controls">
              <button id="clearBtn">Clear</button>
              <label>Color:
                <input type="color" id="colorPicker" value="#000000">
              </label>
            </div>
          </div>
        `}connectedCallback(){var n=this.shadowRoot,a=n.getElementById("canvas"),t=n.getElementById("clearBtn");let o=n.getElementById("colorPicker");this.loadingFromJson=!1,this.canvas=new fabric.Canvas(a),this.canvas.isDrawingMode=!0,this.canvas.freeDrawingBrush.width=3,this.canvas.freeDrawingBrush.color=o.value;n=()=>{var n,a;this.loadingFromJson||(n=this.canvas.toJSON(),a=this.canvas.toDataURL({format:"png",quality:1}),this.onChange({json:n,dataURL:a}))};this.canvas.on("object:added",n),this.canvas.on("object:modified",n),this.canvas.on("object:removed",n),o.addEventListener("input",()=>{this.canvas.freeDrawingBrush.color=o.value}),t.addEventListener("click",()=>{this.canvas.clear()})}loadFromJson(n){this.loadingFromJson=!0,this.canvas.loadFromJSON(n,()=>{this.canvas.renderAll(),this.loadingFromJson=!1})}onChange(n){}}),window.customElements.get("paint-component")||window.customElements.define("paint-component",window.PaintComponent);